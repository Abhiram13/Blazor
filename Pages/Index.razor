@page "/"
@using Authorise;

<section class="container p-0 mx-auto mt-5">
     <section class="col-sm-5 p-0 bg-white shadow mx-auto p-3 rounded">
          @if (ExistingUser)
          {
               <h4 class="text-center mb-3">Login</h4>         
               <input 
                    style="background-color: #f3f3f3" 
                    placeholder="Username" 
                    type="text" 
                    class="row mx-auto mb-3 border-0 p-2 rounded col-sm-9 text-center" 
                    value="@loginUserName" @onchange="@((ChangeEventArgs e) => loginUserName = e.Value.ToString())" 
               />
               <input 
                    style="background-color: #f3f3f3" 
                    placeholder="password" 
                    type="text" 
                    class="row mx-auto mb-3 border-0 p-2 rounded col-sm-9 text-center" 
                    value="@loginpassword" @onchange="@((ChangeEventArgs e) => loginpassword = e.Value.ToString())" 
               />
               <button class="border-0 px-5 d-flex mx-auto rounded shadow-sm py-2" style="background-color: bisque; font-size: small;" @onclick="triggerLogin">Submit</button>
               <p class="text-center mt-4" style="font-size: small;">Don't have an Account? <span style="color: salmon; cursor: pointer;" @onclick="updateUserExistence">Sign Up</span></p>   
          } else {
               <h4 class="text-center mb-3">Sign In</h4>
               <input 
                    style="background-color: #f3f3f3" 
                    class="row mx-auto mb-3 border-0 p-2 rounded col-sm-9 text-center" 
                    placeholder="Username" 
                    type="text" 
                    value="@Username" @onchange="@((ChangeEventArgs e) => Username = e.Value.ToString())" 
               />
               <input 
                    style="background-color: #f3f3f3" 
                    class="row mx-auto mb-3 border-0 p-2 rounded col-sm-9 text-center" 
                    placeholder="Firstname" 
                    type="text" 
                    value="@Firstname" @onchange="@((ChangeEventArgs e) => Firstname = e.Value.ToString())" 
               />
               <input 
                    style="background-color: #f3f3f3" 
                    class="row mx-auto mb-3 border-0 p-2 rounded col-sm-9 text-center" 
                    placeholder="Lastname" 
                    type="text" 
                    value="@Lastname" @onchange="@((ChangeEventArgs e) => Lastname = e.Value.ToString())" 
               />
               <input 
                    style="background-color: #f3f3f3" 
                    class="row mx-auto mb-3 border-0 p-2 rounded col-sm-9 text-center" 
                    placeholder="Password" 
                    type="text" 
                    value="@SetPassword" @onchange="@((ChangeEventArgs e) => SetPassword = e.Value.ToString())" 
               />
               <button class="border-0 px-5 d-flex mx-auto rounded shadow-sm py-2" style="background-color: bisque; font-size: small;">Submit</button>
               <p class="text-center mt-4" style="font-size: small;">Have an Account? <span style="color: salmon; cursor: pointer;" @onclick="updateUserExistence">Log In</span></p>
          }
     </section>
</section>

@if (status != null) {
     <h3>@status.firstname</h3>
}

@code {
     private string loginUserName { get; set; }
     private string loginpassword { get; set; }
     private string Username { get; set; }
     private string Firstname { get; set; }
     private string Lastname { get; set; }
     private string SetPassword { get; set; }
     private bool ExistingUser { get; set; }
     private LoginResponseBody status { get; set; }
     private bool loader { get; set; }

     // ComponentOnMount
     protected override void OnInitialized() {
          ExistingUser = true;
          loader = false;
     }

     public void updateUserExistence() {
          ExistingUser = !ExistingUser;
     }

     public async void triggerLogin() {
          loader = true;
          LoginRequestBody.username = loginUserName;
          LoginRequestBody.password = loginpassword;
          if (Login.statusCode() == 200) {
               status = await Login.logUser();
          } 
     }
}