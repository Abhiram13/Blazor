@page "/"
@using System.Text;
@using Authorise;
@inject NavigationManager nav;

<section class="container p-0 mx-auto mt-5">
     <section class="col-sm-5 p-0 bg-white shadow mx-auto p-3 rounded">
          @if (ExistingUser) {
               <h4 class="text-center mb-3">Login</h4>         
               <input 
                    style="background-color: #f3f3f3" 
                    placeholder="Username" 
                    type="text" 
                    class="row mx-auto border-0 p-2 rounded col-sm-9 text-center" 
                    value="@loginUserName" @onchange="@((ChangeEventArgs e) => { loginUserName = e.Value.ToString(); checkUser(); })" 
               />               
               <small style="font-size: small; margin-left: 13%; color: red;">@(userStatusCode == 400 ? "User does not Exist" : "")</small>
               <small>@(passwordloader ? "Loading...." : "")</small>
               @if (userStatusCode == 200) {
                    <input 
                         style="background-color: #f3f3f3" 
                         placeholder="password" 
                         type="text" 
                         class="row mx-auto mt-3 border-0 p-2 rounded col-sm-9 text-center" 
                         value="@loginpassword" @onchange="@((ChangeEventArgs e) => loginpassword = e.Value.ToString())" 
                    />                    
                    <small style="font-size: small; margin-left: 13%; color: red;">@errorMessage</small>
               }               
               <button class="border-0 px-5 mt-3 d-flex mx-auto rounded shadow-sm py-2" style="background-color: bisque; font-size: small;" @onclick="@(() => triggerLogin())">Submit</button>
               <p class="text-center mt-4" style="font-size: small;">Don't have an Account? <span style="color: salmon; cursor: pointer;" @onclick="updateUserExistence">Sign Up</span></p>   
          } else {
               <h4 class="text-center mb-3">Sign In</h4>
               <input 
                    style="background-color: #f3f3f3" 
                    class="row mx-auto mb-3 border-0 p-2 rounded col-sm-9 text-center" 
                    placeholder="Username" 
                    type="text" 
                    value="@Username" @onchange="@((ChangeEventArgs e) => Username = e.Value.ToString())" 
               />
               <input 
                    style="background-color: #f3f3f3" 
                    class="row mx-auto mb-3 border-0 p-2 rounded col-sm-9 text-center" 
                    placeholder="Firstname" 
                    type="text" 
                    value="@Firstname" @onchange="@((ChangeEventArgs e) => Firstname = e.Value.ToString())" 
               />
               <input 
                    style="background-color: #f3f3f3" 
                    class="row mx-auto mb-3 border-0 p-2 rounded col-sm-9 text-center" 
                    placeholder="Lastname" 
                    type="text" 
                    value="@Lastname" @onchange="@((ChangeEventArgs e) => Lastname = e.Value.ToString())" 
               />
               <input 
                    style="background-color: #f3f3f3" 
                    class="row mx-auto mb-3 border-0 p-2 rounded col-sm-9 text-center" 
                    placeholder="Password" 
                    type="text" 
                    value="@SetPassword" @onchange="@((ChangeEventArgs e) => SetPassword = e.Value.ToString())" 
               />
               <button class="border-0 px-5 d-flex mx-auto rounded shadow-sm py-2" style="background-color: bisque; font-size: small;" @onclick="signup">Submit</button>
               <p class="text-center mt-4" style="font-size: small;">Have an Account? <span style="color: salmon; cursor: pointer;" @onclick="updateUserExistence">Log In</span></p>
          }
     </section>
</section>

@code {
     string loginUserName;
     string loginpassword;
     string Username;
     string Firstname;
     string Lastname;
     string SetPassword;
     bool ExistingUser;
     LoginResponseBody status;
     bool loader;
     int userStatusCode;
     string errorMessage;
     bool passwordloader;

     // ComponentOnMount
     protected override void OnInitialized() {
          ExistingUser = true;
          loader = false;
     }

     public void updateUserExistence() {
          ExistingUser = !ExistingUser;
     }

     private async void triggerLogin() {
          loader = true;          
          LoginRequestBody.username = loginUserName;
          LoginRequestBody.password = loginpassword;
          int code = Login.statusCode();

          if (loginpassword == null) {
               errorMessage = "Please Enter Password";
               return;
          } else if (code == 200) {
               status = await Login.logUser();
               if (status != null)
                    nav.NavigateTo($"/home/{encode(status.username)}/");         
               return;
          } else if (code == 401) {
               errorMessage = "Wrong Password";
               return;
          }
     }

     public void checkUser() {
          passwordloader = true;
          userStatusCode = Login.UserSearch(loginUserName);
          passwordloader = false;
     }

     public string encode(string str) {
          byte[] bytes = Encoding.UTF8.GetBytes(str);
          return Convert.ToBase64String(bytes);
     }

     public void signup() {
          int statuscode = Login.UserSearch(Username);
          SignUpRequest.username = Username;
          SignUpRequest.firstname = Firstname;
          SignUpRequest.lastname = Lastname;
          SignUpRequest.password = SetPassword;

          if (statuscode == 400) {
               ExistingUser = (int)AuthoriseSignUp.signUser().StatusCode == 201 ? true : false;
          }
     }
}