@page "/"
@using Auth
@inject NavigationManager Nav
@inject LoginAuth LAuth
@inject Create C

@if (ExistingUser)
{
   <h1>Login</h1>
   <input placeholder="Login" type="text" value="@CurrentValue" @onchange="@((ChangeEventArgs e) => CurrentValue = e.Value.ToString())" />
   <input placeholder="password" type="text" value="@Password" @onchange="@((ChangeEventArgs e) => Password = e.Value.ToString())" />
   <button @onclick="SetCred">Submit</button>
   <p>Don't have an Account? <span @onclick="updateUserExistence">Sign Up</span></p>   
}
else 
{
   <h1>Sign Up</h1>
   <input placeholder="Username" type="text" value="@Username" @onchange="@((ChangeEventArgs e) => Username = e.Value.ToString())" />
   <input placeholder="Firstname" type="text" value="@Firstname" @onchange="@((ChangeEventArgs e) => Firstname = e.Value.ToString())" />
   <input placeholder="Lastname" type="text" value="@Lastname" @onchange="@((ChangeEventArgs e) => Lastname = e.Value.ToString())" />
   <input placeholder="Password" type="text" value="@SetPassword" @onchange="@((ChangeEventArgs e) => SetPassword = e.Value.ToString())" />
   <button @onclick="Create">Submit</button>
   <p>Have an Account? <span @onclick="updateUserExistence">Log In</span></p>
}

@if (LA == null)
{
   <h6>Loading....</h6>
}
else
{
   <h1>@LA.firstname</h1>
}

@if (SignUpRes == null)
{
    <h6>Still Loading</h6>
}
else
{
   <h6>@SignUpRes</h6>
}

@code {
   private string CurrentValue { get; set; }
   private string Password { get; set; }
   private string Username { get; set; }
   private string Firstname { get; set; }
   private string Lastname { get; set; }
   private string SetPassword { get; set; }
   private ResponseLogin LA { get; set; }
   private string SignUpRes { get; set; }
   private bool ExistingUser { get; set; }

   protected override void OnInitialized()
   {
      ExistingUser = true;
   }

   public void updateUserExistence()
   {
      ExistingUser = !ExistingUser;
   }

   public async void SetCred()
   {
      Login.username = CurrentValue;
      Login.password = Password;
      LA = await LAuth.UserLogin(); 
      Nav.NavigateTo($"/home/{LA._id}");
   }

   public async void Create()
   {
      SignUpObject.username = Username;
      SignUpObject.firstname = Firstname;
      SignUpObject.lastname = Lastname;
      SignUpObject.password = SetPassword;
      SignUpRes = await C.CreateUser();
   }
}