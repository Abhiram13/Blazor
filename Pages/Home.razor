@page "/home/{Id}"
@using User;
@using Authorise;
@using System.Text;
@using Item;

<input type="text" placeholder="Search" class="mx-auto d-block form-control col-sm-2 p-0 text-center" value="@value" @oninput="@((ChangeEventArgs e) => searchItem(e.Value.ToString(), ItemsCopy))" />

<section class="container mx-auto p-0 mt-5">
     <section class="bg-white rounded mx-auto col-sm-10 p-0">
          <div class="d-flex flex-wrap p-3">
               @if (Items != null) {
                   foreach (ItemsResponseBody item in Items) {
                        <div class="p-2 shadow rounded mb-3 mr-4" style="width: 30%; border-radius: 10px; background-color: aliceblue;">
                             <img alt="@item.itemName" class="col-sm p-0 rounded" src="@item.imageURL" />
                             <h6 class="m-0 mt-3">@item.itemName</h6>
                             <small>@item.category</small>
                        </div>
                   }
               } else {
                    <h5>No Results Found</h5>
               }
          </div>
     </section>
</section>

@code
{
     [Parameter]
     public string Id { get; set; }
     public LoginResponseBody ResponseBody;
     protected ItemsResponseBody[] Items;
     public ItemsResponseBody[] ItemsCopy;
     public string value;

     protected override void OnInitialized() {
          if (Id == null) return;
          Items = ItemsCopy = GetItems.fetchItems();
     }

     protected async override void OnParametersSet() {
          if (Id == null) return;
          string userId = Encoding.UTF8.GetString(Convert.FromBase64String(Id));
          ResponseBody = await FindUser.getUser(userId);
     }     

     public void searchItem(string key, ItemsResponseBody[] data) {
          value = key;
          System.Collections.Generic.List<ItemsResponseBody> list = new List<ItemsResponseBody>();

          for (int i = 0; i < data.Length; i++) {
               if (key.StartsWith("@")) {         
                    if (key.Length >= 2) {
                         if (key.Substring(1, key.Length - 1).ToUpper() == data[i].category.Substring(0, key.Length - 1).ToUpper()) {
                              list.Add(data[i]);
                         }
                    } else return;                       
               } else if (key.ToUpper() == data[i].itemName.Substring(0, key.Length).ToUpper()) {
                    list.Add(data[i]);
               }
          }

          Items = list.Count > 0 ? list.ToArray() : null;
     }
}